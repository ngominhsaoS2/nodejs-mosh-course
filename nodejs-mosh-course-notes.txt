11. Global Object
console is one of the global objects in JavaScript. NodeJs also has other global objects.
setTimeout(), clearTimeout(), setInterval(), clearInterval()...

On NodeJS, we dont have "window" global object, instead we have "global" as global object.
console.log(global.message) will return undefined.



12. Modules
console.log(module);
In NodeJs, every file can be considered as a module.



13. Creating a Module



14. Loading a Module
Use const logger = require('./logger'); instead of using var.
Because we dont want to accidentally change the logger variable.



15. Module Wrapper Function
In logger.js file, Node actually does not execute the code. Instead, Node wraps
everything in side the file into a function like below:

(function (exports, require, module, __filename, __dirname) {
    // code inside js file go here
    ...
})

This function is called "Module Wrapper Function"



16. Path Module



17. OS Module



18. File System Module



19. Events Module
Event is a signal that something has happened.

const EventEmitter = require('events'); :EventEmitter uppcase like this means this EventEmitter is a Class.
It's not a function, not a simple value, it's a class. Class contains properties, methods.
We have to create an instance of that class.



20. Event Arguments
We can pass data when emit even.



21. Extending Event Emitter
When a function is inside a class, it is called method.








